plugins {
    id 'java'
    // Check for new versions at https://plugins.gradle.org/plugin/io.papermc.paperweight.userdev
    id("io.papermc.paperweight.userdev") version "2.0.0-beta.17"
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'com.gradleup.shadow' version '9.0.0-beta17'
}

group = 'net.sabafly'
version = '1.1.1'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://jitpack.io'
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/releases/'
    }
    maven {
        url = "https://repo.essentialsx.net/snapshots/"
    }
}

dependencies {
    compileOnly("com.h2database:h2:2.3.232")
    compileOnly("com.mysql:mysql-connector-j:9.3.0")
    implementation("com.zaxxer:HikariCP:6.3.0")
    implementation("commons-dbutils:commons-dbutils:1.8.1")
    implementation 'org.spongepowered:configurate-yaml:4.2.0'

    compileOnly("com.github.MilkBowl:VaultAPI:1.7.1") {
        transitive = false
    }
    compileOnly('me.clip:placeholderapi:2.11.6') {
        transitive = false
    }
    compileOnly('com.github.Jikoo.OpenInv:openinvapi:5.1.4') {
        transitive = false
    }
    compileOnly("net.essentialsx:EssentialsX:2.21.0-SNAPSHOT") {
        exclude(group: 'org.spigotmc', module: 'spigot-api')
        transitive = false
    }

    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    paperweight.paperDevBundle("1.21.6-R0.1-SNAPSHOT")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

//noinspection UnnecessaryQualifiedReference
tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {

    archiveBaseName = 'EmeraldBank'
    archiveClassifier = ''
    archiveVersion = "${version}"

    dependencies {
        exclude(dependency("org.slf4j:slf4j-api"))
        exclude(dependency("net.kyori:option"))
    }

    minimize()

    relocate('org.spongepowered.configurate', 'net.sabafly.configurate')
    relocate('io.leangen.geantyref', 'net.sabafly.geantyref')

    relocate("com.zaxxer.hikari", "net.sabafly.libs.com.zaxxer.hikari")
    relocate("org.apache.commons.dbutils", "net.sabafly.libs.org.apache.commons.dbutils")
}

tasks.build {
    dependsOn shadowJar
}

tasks {
    runServer {
        //noinspection GroovyMissingReturnStatement
        downloadPlugins {
//            github("Jikoo", "OpenInv", "5.1.6", "OpenInv.jar")
            github("MilkBowl", "Vault", "1.7.3", "Vault.jar")
//            url("https://ci.ender.zone/job/EssentialsX/lastSuccessfulBuild/artifact/jars/EssentialsX-2.21.0-dev+185-5bf158c.jar")
            url("https://download.luckperms.net/1589/bukkit/loader/LuckPerms-Bukkit-5.5.4.jar")
            url("https://ci.extendedclip.com/job/PlaceholderAPI/208/artifact/build/libs/PlaceholderAPI-2.11.7-DEV-208.jar")
        }
        minecraftVersion("1.21.6")
    }
}
